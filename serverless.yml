service: ecs-autoscaling-lifecycle-hooks
useDotenv: true
frameworkVersion: ^3.33.0

provider:
  name: aws
  runtime: java17
  architecture: arm64
  memorySize: 1024
  timeout: 60
  region: us-west-2
  deploymentBucket:
    name: ${env:BUCKET}
    serverSideEncryption: "AES256"
  iam:
    deploymentRole: "arn:aws:iam::${env:ACCOUNT}:role/cloudformation/deployer/cloudformation-deployer"
    role:
      managedPolicies:
        - "arn:aws:iam::aws:policy/service-role/AutoScalingNotificationAccessRole"
      statements:
        - Sid: CorePermissions
          Action:
            - "autoscaling:CompleteLifecycleAction"
            - "autoscaling:DescribeAutoScalingInstances"
            - "ecs:ListClusters"
            - "ecs:ListContainerInstances"
            - "ecs:DescribeContainerInstances"
            - "ecs:UpdateContainerInstancesState"
            - "ecs:ListTasks"
            - "ecs:DescribeTasks"
            - "ec2:DescribeInstances"
            - "cloudformation:DescribeStackResources"
          Resource: "*"
          Effect: Allow
        - Sid: RepublishMessages
          Effect: Allow
          Resource:
            - Ref: SNSTopicAutoScalingLifecycleHookNotifications
          Action:
            - sqs:SendMessage
            - sqs:GetQueueUrl
            - sns:Publish
  tracing:
    lambda: true
  logRetentionInDays: 7
  stackTags:
    Creator: serverless
    Environment: ${self:custom.EnvironmentTag.${opt:stage}}
    Project: ${self:service}
    Team: platform
    Visibility: internal
    "org.label-schema.vcs-ref": ${env:VERSION}
    "org.label-schema.vcs-url": ${env:VCS_URL}

package:
  individually: true

functions:
  DrainOnTermination:
    handler: com.dwolla.autoscaling.ecs.draining.TerminationEventHandler
    package:
      artifact: ${env:DRAINING_ARTIFACT_PATH}
    events:
      - sns:
          arn:
            Ref: SNSTopicAutoScalingLifecycleHookNotifications
          topicName: AutoScalingEcsDrainingNotification
          filterPolicyScope: MessageBody
          filterPolicy:
            LifecycleTransition:
              - "autoscaling:EC2_INSTANCE_TERMINATING"
            LifecycleHookName:
              - drain-ecs-container-instance

  ConfirmRegistratorHealth:
    handler: com.dwolla.autoscaling.ecs.registrator.ScaleOutPendingEventHandler
    package:
      artifact: ${env:REGISTRATOR_ARTIFACT_PATH}
    events:
      - sns:
          arn:
            Ref: SNSTopicAutoScalingLifecycleHookNotifications
          topicName: SNSTopicAutoScalingEcsScaleOutNotification
          filterPolicyScope: MessageBody
          filterPolicy:
            LifecycleTransition:
              - "autoscaling:EC2_INSTANCE_LAUNCHING"
            LifecycleHookName:
              - confirm-registrator-is-healthy-on-scale-out

resources:
  Description:
    Auto Scaling Lifecycle Hooks for ECS Container Instances
  Resources:
    SNSTopicAutoScalingLifecycleHookNotifications:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: AutoScalingLifecycleHookNotifications
    AllowPublishToSNSTopicAutoScalingLifecycleHookNotifications:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: autoscaling.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: AllowPublishToSNSTopicAutoScalingLifecycleHookNotifications
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Resource:
                    - Ref: SNSTopicAutoScalingLifecycleHookNotifications
                  Action:
                    - sqs:SendMessage
                    - sqs:GetQueueUrl
                    - sns:Publish

  Outputs:
    SNSTopicAutoScalingLifecycleHookNotifications:
      Value:
        Ref: SNSTopicAutoScalingLifecycleHookNotifications
      Description:
        Topic used by Auto Scaling to send notifications when instance state is changing
      Export:
        Name: sls-${self:service}-${opt:stage}-SNSTopicAutoScalingLifecycleHookNotifications
    AllowPublishToSNSTopicAutoScalingLifecycleHookNotifications:
      Value:
        Fn::GetAtt:
          - AllowPublishToSNSTopicAutoScalingLifecycleHookNotifications
          - Arn
      Export:
        Name: sls-${self:service}-${opt:stage}-AllowPublishToSNSTopicAutoScalingLifecycleHookNotifications
      Description:
        IAM Role to allow Auto Scaling to publish to the SNS Topic for ECS instance lifecycle hooks

custom:
  EnvironmentTag:
    admin: admin
    sandbox: sandbox
